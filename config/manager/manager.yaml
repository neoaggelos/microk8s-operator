apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      hostNetwork: true
      securityContext:
        runAsUser: 0
        # runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      volumes:
      - name: var-snap
        hostPath:
          path: /var/snap/microk8s
          type: Directory
      - name: snap-socket
        hostPath:
          path: /run/snapd.socket
          type: Socket
      containers:
      - command:
        - /manager
        args: []
        image: neoaggelos/microk8s-operator:0.0.1-dev2
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: var-snap
            mountPath: /host/var-snap-microk8s
          - name: snap-socket
            mountPath: /host/run-snapd.socket
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: SNAP_DATA
            value: /host/var-snap-microk8s/current
          - name: SNAP_COMMON
            value: /host/var-snap-microk8s/common
          - name: SNAP_SOCKET
            value: /host/run-snapd.socket
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
